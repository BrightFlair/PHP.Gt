#!/usr/bin/env php
<?php
/**
 * Uses composer to install all dependencies required to run or test the
 * project. Downloads composer if it doesn't already exist.
 *
 * PHP.Gt (http://php.gt)
 * @copyright Copyright â’¸ 2014 Bright Flair Ltd. (http://brightflair.com)
 * @license Apache Version 2.0, January 2004. http://www.apache.org/licenses
 */
die(PHP_EOL . PHP_EOL
	. "PHP.Gt install script is not yet ready on master branch."
	. PHP_EOL . PHP_EOL);
$HOME = $_SERVER["HOME"];
$gtDir = "$HOME/.gt";
if(!is_dir($gtDir)) {
	mkdir($gtDir);
}
chdir($gtDir);

if(!file_exists("composer.phar")) {
	echo "Installing composer..." . PHP_EOL;
	$tempFile = "install-composer.php";
	$installScript = file_get_contents("https://getcomposer.org/installer");
	file_put_contents($tempFile, $installScript);
	passthru("php $tempFile");
	unlink($tempFile);

	// echo "Installing composer..." . PHP_EOL;
	// $returnVar = 0;
	// passthru("./composer.phar install", $returnVar);
	// if($returnVar == 0) {
	// 	echo "Composer installed successfully!" . PHP_EOL . PHP_EOL;
	// }
	// else {
	// 	echo "Error installing Composer :(" . PHP_EOL;
	// 	exit($returnVar);
	// }
}

die("AFOSDGJDFKDMFSNG");

// OS-dependant stuff:
switch(PHP_OS) {
case "Darwin":
	// OSX
	// Install Homebrew to install MySQL and PHP versions.
	passthru("hash brew 2> /dev/null", $brewMissing);
	if($brewMissing) {
		echo "Downloading homebrew..." . PHP_EOL;
		$tempFile = "install-homebrew.php";
		$installScript = file_get_contents(
			"https://raw.githubusercontent.com/Homebrew/install/master/install"
		);
		file_put_contents($tempFile, $installScript);

		echo "Installing homebrew..." . PHP_EOL;
		passthru("ruby -e $tempFile", $returnVar);
		unlink($tempFile);

		if($returnVar == 0) {
			echo "Homebrew installed successfully!" . PHP_EOL . PHP_EOL;
		}
		else {
			echo "Error installing Homebrew :(" . PHP_EOL;
			exit($returnVar);
		}
	}

	// TODO: Manage packages for OSX.
	break;

default:
	break;
}
var_dump(PHP_OS);die();

echo "\n\nPHP.Gt successfully installed\n\n";