#!/usr/bin/env php
<?php
/**
 * Uses composer to install all dependencies required to run or test the
 * project. Downloads composer if it doesn't already exist.
 *
 * PHP.Gt (http://php.gt)
 * @copyright Copyright â’¸ 2014 Bright Flair Ltd. (http://brightflair.com)
 * @license Apache Version 2.0, January 2004. http://www.apache.org/licenses
 */
$binDir = __DIR__;
$HOME = $_SERVER["HOME"];
$gtDir = "$HOME/.gt";
$gtBinDir = "$gtDir/bin";

if(!is_dir($gtDir)) {
	mkdir($gtDir);
}
chdir($gtDir);

if(!file_exists("composer.phar")) {
	echo "Installing composer..." . PHP_EOL;
	$tempFile = "install-composer.php";
	$installScript = @file_get_contents("https://getcomposer.org/installer");
	if(!$installScript) {
		die("Failed installing composer. " . PHP_EOL
			. "Are you connected to the internet?" . PHP_EOL);
	}
	file_put_contents($tempFile, $installScript);
	passthru("php $tempFile", $composerReturn);
	unlink($tempFile);

	if($composerReturn != 0) {
		die("Something went wrong installing composer :(" . PHP_EOL);
	}
}

// OS-dependant stuff:
switch(PHP_OS) {
case "Darwin":
	// OSX
	// Install Homebrew to install MySQL and PHP versions.
	passthru("hash brew 2> /dev/null", $brewMissing);
	if($brewMissing) {
		echo "Downloading homebrew..." . PHP_EOL;
		$tempFile = "install-homebrew.php";
		$installScript = file_get_contents(
			"https://raw.githubusercontent.com/Homebrew/install/master/install"
		);
		file_put_contents($tempFile, $installScript);

		echo "Installing homebrew..." . PHP_EOL;
		passthru("ruby -e $tempFile", $returnVar);
		unlink($tempFile);

		if($returnVar == 0) {
			echo "Homebrew installed successfully!" . PHP_EOL . PHP_EOL;
		}
		else {
			echo "Error installing Homebrew :(" . PHP_EOL;
			exit($returnVar);
		}
	}

	// TODO: Manage packages for OSX.
	break;

default:
	break;
}

if(!is_dir($gtBinDir)) {
	mkdir($gtBinDir, 0775, true);
}

foreach (new DirectoryIterator($binDir) as $item) {
	if($item->isDot()) {
		continue;
	}

	$filename = $item->getFilename();
	$pathname = $item->getPathname();
	$linkname = "$gtBinDir/gt-$filename";

	if(file_exists($linkname)) {
		unlink($linkname);
	}

	symlink($pathname, $linkname);
}

$bashLoadScript = "$HOME/.bash_profile";
$bashExisting = "";
if(file_exists($bashLoadScript)) {
	$bashExisting = file_get_contents($bashLoadScript);
}
if(!strstr($bashExisting, "#gt")) {
	// TODO: Remove existing gt snippet rather than ignoring completely.
	// Add gtBinDir to path.
	$bash = <<<BASH

#gt
if [[ ":\$PATH:" != *":$gtBinDir:"* ]]; then
  PATH=\$PATH:$gtBinDir
  export PATH
fi
#gt-end

BASH;
	file_put_contents($bashLoadScript, $bash, FILE_APPEND);
}

echo PHP_EOL . "PHP.Gt successfully installed." . PHP_EOL
	. "Log out and log in again to use gt-* commands." . PHP_EOL
	. PHP_EOL;